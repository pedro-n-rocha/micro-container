plugins {
 id "com.github.johnrengelman.shadow" version "1.2.3"
 id "com.bmuschko.docker-java-application" version "3.0.1"
}
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'com.bmuschko.docker-java-application'

import org.gradle.api.Project
import org.gradle.api.plugins.ApplicationPlugin
import com.bmuschko.gradle.docker.DockerJavaApplicationPlugin
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.DockerJavaApplication
       
eclipse {
    classpath {
       downloadSources=true
    }
}

group = "net.cortex"
version = 1.0
sourceCompatibility = 1.8

repositories {
	jcenter()
    mavenCentral()
}

mainClassName = "net.cortex.bootstrap.Main"

dependencies {
 compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
 compile group: "org.cfg4j", name:"cfg4j-core", version: "4.4.0"
 compile group: "org.cfg4j", name:"cfg4j-consul", version: "4.4.0"
 compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
 compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.7'
}

jar {
    manifest {
        attributes 'Main-Class':"net.cortex.bootstrap.Main"
    }
}

task copyDist(type: Copy){
 from 'build/distributions'
 into 'build/docker/'
} 


task createDockerfile(type: Dockerfile ) {

    dependsOn distTar 
    dependsOn copyDist 
    destFile = project.file('build/docker/Dockerfile')
    from 'java:alpine'
    runCommand 'export https_proxy=http://194.65.37.122:80 ; export http_proxy=http://194.65.37.122:80 ; apk --update add bash'
    addFile  'micro-container-1.0.tar' , '/'
    entryPoint '/micro-container-1.0/bin/micro-container'
    maintainer 'Pedro Rocha'
}
  
task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = '10.112.84.201/main-kafka-streams'
}

distributions {
    main {
        contents {
            from shadowJar.outputs
        }
    }
}

docker {
   url = "tcp://10.112.84.201:2375"
    javaApplication {
        baseImage = 'java:alpine'
        maintainer = 'Pedro Rocha'
        port = 0
        tag = '10.112.84.201/main'
    }
}